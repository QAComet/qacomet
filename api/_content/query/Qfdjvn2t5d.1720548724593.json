{"_path":"/case-studies/automatisch","_dir":"case-studies","_draft":false,"_partial":false,"_locale":"","title":"Automatisch","description":"","subtitle":"Going from the launch pad to the cosmos with E2E testing","breadcrumbs":[{"name":"Case Studies","path":"/case-studies/"},{"name":"Automatisch","path":"/case-studies/automatisch/"}],"link":"/case-studies/automatisch","created":{"string":"February 26, 2024","valueOf":1708930800000,"month":"Feb","day":26,"year":2024},"shortDescription":"We've recently worked with Automatisch.io and provided numerous testing and QA services supporting their codebase.","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"improving-software-quality-and-testing-infrastructure-for-automatisch"},"children":[{"type":"text","value":"Improving Software Quality and Testing Infrastructure for Automatisch"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We recently collaborated with an open source no-code automation company called "},{"type":"element","tag":"a","props":{"href":"https://automatisch.io","rel":["nofollow"]},"children":[{"type":"text","value":"Automatisch"}]},{"type":"text","value":" and helped them both improve their product with our numerous QA services. This includes implementing automated tests, bug finding and reporting, and enhancing their continuous integration (CI) pipeline to support both community and enterprise editions."}]},{"type":"element","tag":"h2","props":{"id":"automatisch-the-open-source-zapier-alternative"},"children":[{"type":"text","value":"Automatisch: The Open Source Zapier Alternative"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://automatisch.io","rel":["nofollow"]},"children":[{"type":"text","value":"Automatisch"}]},{"type":"text","value":" is a reputable "},{"type":"element","tag":"a","props":{"href":"https://github.com/automatisch/automatisch","rel":["nofollow"]},"children":[{"type":"text","value":"open source"}]},{"type":"text","value":" software integration platform providing an alternative to Zapier. It is built with a variety of node JS libraries, including ReactJS and expressJS. Upon starting our collaboration, their product already had several dozen integrations with other platforms, and were in progress building many more. The key quality assurance (QA) requirements included discovering and documenting bugs, developing automated smoke tests using playwright, and ensuring the CI pipeline works flawlessly for both community and enterprise editions."}]},{"type":"element","tag":"h2","props":{"id":"proactive-bug-finding-and-reporting"},"children":[{"type":"text","value":"Proactive Bug Finding and Reporting"}]},{"type":"element","tag":"h3","props":{"id":"our-approach-to-reporting-bugs"},"children":[{"type":"text","value":"Our approach to reporting bugs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"While working through our testing of Automatisch's platform, we discovered bugs covering a wide span of cases. All of our bug reports included three sections"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Overview"}]},{"type":"text","value":": A Quick overview of the bug found, which generally includes an image"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reproduction"}]},{"type":"text","value":": Detailed list of instructions for reproducing the bug"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Improvements"}]},{"type":"text","value":": Suggestions for how to resolve the bug and improve the software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using this format makes it clear for future developers where they can find the source of the problem and resolve the ticket."}]},{"type":"element","tag":"h3","props":{"id":"some-bugs-we-found"},"children":[{"type":"text","value":"Some Bugs We Found"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/automatisch/automatisch/issues/1371","rel":["nofollow"]},"children":[{"type":"text","value":"Recreating deleted users"}]}]},{"type":"text","value":": If an admin deleted a user they manage, and then attempted to re-create that user with the same email address, they were met with not only an opaque error message, but also did not have a way to recover the user's old account."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/automatisch/automatisch/issues/1370","rel":["nofollow"]},"children":[{"type":"text","value":"Inconsistent interface conveying permissions"}]}]},{"type":"text","value":": If a user does not have permissions to create a connection to a platform integrated into Automatisch, there was inconsistent behavior in the interface depending on the page they accessed. For example, the user could"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/automatisch/automatisch/issues/1366","rel":["nofollow"]},"children":[{"type":"text","value":"Deleting roles edge case"}]}]},{"type":"text","value":": If a only a deleted user has a role attached to them, the admin is not able to delete the role after the user has been deleted."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/automatisch/automatisch/issues/1235","rel":["nofollow"]},"children":[{"type":"text","value":"Invalidating GitHub OAuth error"}]}]},{"type":"text","value":": If a user invalidates the oauth token used by Automatisch, there is not a useful error reported, only a generic error message which could imdicate many different problems."}]},{"type":"element","tag":"h2","props":{"id":"dive-into-testing"},"children":[{"type":"text","value":"Dive into Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upon starting out work with Automatisch, we dove into a codebase already containing tests for some of the features their SaaS provides. One of the first tasks we worked on was refactoring one of the main smoke tests into one which followed best practices in Playwright."}]},{"type":"element","tag":"h3","props":{"id":"refactoring-workflow-tests"},"children":[{"type":"text","value":"Refactoring Workflow Tests"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The central workflow configuration interface in Automatisch is their bread and butter: this is where users go to configure their custom integrations between the various supported platforms. The set of tests for this part of the codebase included some large multi-part test cases which needed to be run sequentially. We refactored this set of code using Playwright's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"test.step"}]},{"type":"text","value":" interface, which makes it easy to write a large multipart test into smaller easily comprehendable test units. By refactoring we ensured the test ordering was guaranteed to be stable across platforms, ensuring replicability of test runs while also giving assurances for working featres across software releases."}]},{"type":"element","tag":"h3","props":{"id":"user-management"},"children":[{"type":"text","value":"User Management"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After this refactoring, we began work writing tests for other parts of the application. This included writing test cases for managing users for the enterprise-edition of Automatisch. Part of writing the tests is setting up the application code so it is compatible with the tests, even after user interface changes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our tests for user management captured a wide number of workflows administrators could face while using Automatisch. This includes the basic user workflows, such as creating users from the administrators side, editing the users, and finally deleting them. In addition to the standard checks, we also wrote tests ensuring coverage of edge case behavior.\nNote that when a user accesses Automatisch, they must provide their email address as a username."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We included tests in the administrator workflow ensuring a second user cannot be created with the same email address as an existing user. In addition, there are tests ensuring that if an administrator attempts to edit one user to have the same email as another existing user, this action cannot be performed as well."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of the challenges we ran into while writing these tests was ensuring the notifications plugin was not interfering with test behavior. After performing an action, a notification in the application would be displayed showing whether or not the action was successful. For example, if we tried editing the information of a user, either a success notification or error notification will be displayed after submitting the edit form."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We overcame these challenges by upgrading the library used so we could put "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"data-"}]},{"type":"text","value":" props on the associated HTML mounted to the page for any of the notifications. This way we could check the status of the notification, the text included, and giving us a way to close the notification after our test is done validating its information."}]},{"type":"element","tag":"h3","props":{"id":"role-management"},"children":[{"type":"text","value":"Role Management"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another part of Automatisch requiring test coverage was role management. Automatisch provides an strong Role Based Access Control (RBAC) authorization system controlling which actions a user is able to perform. There are permissions for reading, creating, updating, and deleting, for many different sets of features within Automatisch. These features RBAC controls includes creating workflows integrating various third party software together, creating new connections to third party vendors, and managing executions of the workflows."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We wrote integration tests for each of these sets of permissions, ensuring they worked as intended, and ensured the interface behaved as expected when the logged-in user did or did not have the relevant permission."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to these tests on permission, we also created test coverage for the admin workflows for managing these roles and permissions. This includes the standard creating, updating, and deleting of roles. In addition, we added coverage for edge case behavior similar to the edge cases found in the administration of users."}]},{"type":"element","tag":"h2","props":{"id":"ci-pipeline-enhancements"},"children":[{"type":"text","value":"CI Pipeline Enhancements"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Automatisch serves a diverse range of users, from open source self-hosted users to enterprise clients. Being able to push updates to this diverse user base requires adequate testing covering functionality available to both sets of users. Part of this equation is testing in the CI pipeline all types of end-users, ensuring robust updates of the software. We supported Automatisch in crafting their CI pipeline with GitHub actions, giving test support for both self-hosted and enterprise features during development, ultimately building a reliable development ecosystem."}]},{"type":"element","tag":"h2","props":{"id":"tangible-value"},"children":[{"type":"text","value":"Tangible Value"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Already with our test work is Automatisch reaping the benefits from these automated checks. Currently they are working on a major restructuring of their application, moving the previous GraphQL API to the current REST API. Their main lighthouse guiding them throughout this process has been their test suite, since it has given them assurance these major structural changes to their codebase are not interfering with the already existing features and workflows supported on their platform."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"improving-software-quality-and-testing-infrastructure-for-automatisch","depth":2,"text":"Improving Software Quality and Testing Infrastructure for Automatisch"},{"id":"automatisch-the-open-source-zapier-alternative","depth":2,"text":"Automatisch: The Open Source Zapier Alternative"},{"id":"proactive-bug-finding-and-reporting","depth":2,"text":"Proactive Bug Finding and Reporting","children":[{"id":"our-approach-to-reporting-bugs","depth":3,"text":"Our approach to reporting bugs"},{"id":"some-bugs-we-found","depth":3,"text":"Some Bugs We Found"}]},{"id":"dive-into-testing","depth":2,"text":"Dive into Testing","children":[{"id":"refactoring-workflow-tests","depth":3,"text":"Refactoring Workflow Tests"},{"id":"user-management","depth":3,"text":"User Management"},{"id":"role-management","depth":3,"text":"Role Management"}]},{"id":"ci-pipeline-enhancements","depth":2,"text":"CI Pipeline Enhancements"},{"id":"tangible-value","depth":2,"text":"Tangible Value"}]}},"_type":"markdown","_id":"content:case-studies:automatisch.md","_source":"content","_file":"case-studies/automatisch.md","_extension":"md"}